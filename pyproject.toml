[tool.poetry]
name = "colour-specio"
packages = [{ include = "specio" }]
version = "0.4.0a0"
description = "Instrument control for spectrometers"
authors = ["Tucker <tucker@tjdcs.dev>"]
keywords = ["colour-science", "spectrometer", "instrument control"]
readme = "README.md"
license = "BSD-3-Clause"
homepage = "https://github.com/tjdcs/specio"
repository = "https://github.com/tjdcs/specio"
include = ["LICENSE"]

[tool.poetry.scripts]
csmf_doctor = 'specio.scripts.csmf_doctor:main'
csmf_anonymize = 'specio.scripts.csmf_anonymize:main'

[tool.poetry.dependencies]
python = "^3.10,<3.13"
colour-science = "^0.4.2"
numpy = "^1.23.1"
pyserial = "^3.5"
aenum = "^3.1.11"
protobuf = "^5.27.0"


[tool.poetry.group.dev.dependencies]
matplotlib = "*"
pytest = "*"
ipykernel = "*"
pandas = "*"
ruff = "*"
isort = "*"
black = "*"
pyright = "*"
pytest-xdist = "*"
mypy = "^1.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Begin Colour-Style
[tool.black]
line-length = 79
exclude = '''
/(
    \.git
  | build
  | dist
)/
'''

[tool.flynt]
line_length = 999

[tool.pyright]
reportMissingImports = false
reportMissingModuleSource = false
reportUnboundVariable = false
reportUnnecessaryCast = true
reportUnnecessaryTypeIgnoreComment = true
reportUnsupportedDunderAll = false
reportUnusedExpression = false

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
split_on_trailing_comma = true

[tool.ruff]
ignore = [
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "I001",
    "N801",
    "N802",
    "N803",
    "N806",
    "N813",
    "N815",
    "N816",
    "ICN001",
    "PGH003",
    "PIE804",
    "PLE0605",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PLR2004",
    "RET504",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "S101",
    "TRY003",
    "TRY300",
]

exclude = ["*_pb2.py", "*_pb2.pyi"]
target-version = "py39"
line-length = 88
ignore-init-module-imports = true
select = [
    "A",   # flake8-builtins
    "ARG", # flake8-unused-arguments
    # "ANN", # flake8-annotations
    "B", # flake8-bugbear
    # "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    # "C90", # mccabe
    # "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "D",   # pydocstyle
    "E",   # pydocstyle
    # "ERA", # eradicate
    # "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "F",   # flake8
    # "FBT", # flake8-boolean-trap
    "G",   # flake8-logging-format
    "I",   # isort
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    # "PD", # pandas-vet
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PL",  # pylint
    # "PT", # flake8-pytest-style
    # "PTH", # flake8-use-pathlib [Enable]    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RUF", # Ruff
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    # "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "W",   # pydocstyle
    "YTT", # flake8-2020
]

fixable = ["B", "C", "E", "F", "PIE", "RUF", "SIM", "UP", "W"]

[tool.ruff.pydocstyle]
convention = "numpy"
# End Colour-Style
